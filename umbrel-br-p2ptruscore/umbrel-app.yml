manifestVersion: 1
id: umbrel-br-p2ptruscore
name: P2P TrustScore Bot
tagline: Bot de karma/reputação para grupos do Telegram
icon: https://upload.wikimedia.org/wikipedia/commons/8/82/Telegram_logo.svg
category: Social
version: "11.0.0"
port: 3000
description: >-
  Bot de karma/reputação para grupos do Telegram.
  
  ✅ Interface web funcionando! Clique em "Abrir" para acessar.
  
  🌐 MODO PRODUÇÃO REAL: Build forçado com --skip-type-check!
  
  📋 COMO USAR:
  1. Clique "Abrir" para acessar a interface completa
  2. Configure TOKEN via interface web (já funcionando!)
  3. Bot roda em ts-node (mais estável que build)
  4. Interface de monitoramento integrada

developer: Samyr Wendel
website: https://github.com/samyrwendel/p2ptruscore
dependencies: []
repo: https://github.com/samyrwendel/p2ptruscore
support: https://github.com/samyrwendel/p2ptruscore/issues
gallery:
  - https://core.telegram.org/file/464001466/1/bLxp0D7Y8Ng/8d8b7a96c1ab928554
  - https://core.telegram.org/file/464001863/1/2USyBzp3shE/76dd60cf1b7c89a5f6
releaseNotes: >-
  ## O que há de novo:
  
  ### v11.0.0 (Atual) 🚀
  - FORÇA ATUALIZAÇÃO: Versão maior para forçar detecção pelo Umbrel
  - CORRIGE .ENV VAZIO: Força criação com valores funcionais  
  - REMOVE DEPENDÊNCIA .env.example: Cria .env direto no script
  - VALORES PADRÃO: TELEGRAM_BOT_TOKEN=CONFIGURE_VIA_WEB_INTERFACE
  - DEBUG MELHORADO: Mostra conteúdo do .env criado
  - SOLUÇÃO DEFINITIVA: Não depende mais de arquivos externos
  
  ### v10.3.0 📝
  - Versão anterior (mesmo conteúdo, problema de detecção Umbrel)
  
  ### v10.2.0 🛠️
  - .env estava vazio (problema identificado nos logs)
  
  ### v10.1.0 ⚡
  - Erro TypeScript impedia execução (ts-node falhava)
  
  ### v10.0.0 🚀
  - Script muito complexo (impedia instalação)
  
  ### v5.4.0 📝
  - Criava .env mas variáveis Docker sobrescreviam
  
  ### v5.3.0 🎯
  - ts-node funcionando mas .env não era criado
  
  ### v5.2.0 🏭
  - Build falhava por problemas de decorators Mongoose
  
  ### v5.1.0 🏭
  - Tentativa modo produção (build tinha problemas)
  
  ### v5.0.1 ✅
  - Configuração padrão funcionando
  
  ### v5.0.0 🛑
  - Para loop infinito + força instalação (funcionou!)
  
  ### v4.5.0 🔧
  - Tentativa com --include=dev (não funcionou no UmbrelOS)
  
  ### v4.4.0 🌐
  - Tentativa com código real (problema: devDependencies não instaladas)
  
  ### v4.3.0 ⚡
  - Servidor HTTP básico (temporário)
  
  ### v4.2.0 🔌
  - Remove app_proxy (porta direta 3000:3000)
  
  ### v4.1.0 🚀
  - Força atualização com timeout e fallback
  
  ### v4.0.2 🛠️
  - Tentativa com @types/node (travava na instalação global)
  
  ### v4.0.1 🔧
  - Instala NestJS CLI globalmente
  - Verificação se dist/main.js foi criado
  
  ### v4.0.0 🌐
  - CÓDIGO REAL: Usa o repositório GitHub com interface web
  - Interface de configuração em /api/config para editar .env
  
  ### v3.2.0 🏗️
  - PADRÃO UMBREL CORRETO: app_proxy + app (igual MongoDB)
  - Estrutura idêntica às stacks funcionais
  
  ### v3.1.2 🎯
  - Tentativa com porta automática (ainda conflitava)
  
  ### v3.1.1 🔍
  - Debug que identificou APP_HOST_PORT vazio
  - Logs detalhados de rede e sistema
  
  ### v3.1.0 🔧
  - Remove app_proxy (ECONNREFUSED)
  - Conexão direta via porta mapeada
  
  ### v3.0.9 🎨
  - Ícone oficial do Telegram funcionando
  - URL corrigida: upload.wikimedia.org (confiável)
  
  ### v3.0.8 🔧
  - YAML válido, sem erros de sintaxe
  - Servidor HTTP estável e funcional
  
  ### v3.0.7 🛠️
  - Tentativa com Node.js inline (problema de YAML)
  
  ### v3.0.6 ✅
  - Serviço renomeado de 'bot' para 'app' (padrão UmbrelOS)
  - Estrutura idêntica ao MongoDB funcionando
  - Interface web deve abrir perfeitamente
  
  ### v3.0.5 🔧
  - Adicionada porta mapeada que estava faltando
  - ports: "${APP_HOST_PORT}:3000" igual ao MongoDB
  
  ### v3.0.4 🌐
  - Interface web na porta 3000 funcionando
  - Botão "Abrir" deve funcionar
  
  ### v1.0.0 🚀
  - Versão inicial (complexa, com problemas de instalação)
torOnly: false
