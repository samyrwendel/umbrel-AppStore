version: '3'

services:
  app_proxy:
    environment:
      APP_HOST: app
      APP_PORT: 3000

  app:
    image: node:20-alpine
    restart: unless-stopped
    command: 
      - sh
      - -c
      - |
        echo "üöÄ P2P TrustScore Bot v4.0.2 - CORRE√á√ÉO TIPOS..."
        apk add --no-cache git
        if [ ! -d /app/.git ]; then
          echo "üì• Clonando reposit√≥rio..."
          git clone https://github.com/samyrwendel/p2ptruscore.git /app
        else
          echo "üîÑ Atualizando c√≥digo..."
          cd /app && git pull origin main
        fi
        cd /app
        echo "üì¶ Instalando depend√™ncias de produ√ß√£o..."
        npm install --only=production
        echo "üì¶ Instalando depend√™ncias de desenvolvimento..."
        npm install --only=development
        echo "üîß Instalando tipos Node.js..."
        npm install @types/node --save-dev
        echo "üîß Instalando cross-env..."
        npm install cross-env --save-dev
        echo "üîß Instalando NestJS CLI globalmente..."
        npm install -g @nestjs/cli
        echo "üèóÔ∏è Compilando projeto (ignorando erros de tipo)..."
        if command -v nest >/dev/null 2>&1; then
          nest build --skip-type-check || echo "‚ö†Ô∏è Build com avisos, mas continuando..."
        else
          echo "‚ö†Ô∏è Usando npx como fallback..."
          npx @nestjs/cli build --skip-type-check || echo "‚ö†Ô∏è Build com avisos, mas continuando..."
        fi
        echo "üîç Verificando se build foi criado..."
        if [ -f "/app/dist/main.js" ]; then
          echo "‚úÖ Build criado com sucesso!"
          echo "üåê Iniciando servidor com interface de configura√ß√£o..."
          echo "‚úÖ Acesse /api/config para configurar o bot"
          npm run start:prod
        else
          echo "‚ùå Build falhou, tentando compilar com tsc diretamente..."
          npx tsc --skipLibCheck --outDir dist src/main.ts || echo "‚ö†Ô∏è Compila√ß√£o com avisos..."
          if [ -f "/app/dist/main.js" ]; then
            echo "‚úÖ Compila√ß√£o manual funcionou!"
            node dist/main.js
          else
            echo "‚ùå Todas as tentativas falharam, iniciando servidor simples..."
            node -e "
            const express = require('express');
            const app = express();
            app.get('/', (req, res) => res.send('Bot em manuten√ß√£o - Problemas de compila√ß√£o'));
            app.get('/api/config', (req, res) => res.send('Interface de configura√ß√£o temporariamente indispon√≠vel'));
            app.listen(3000, () => console.log('Servidor tempor√°rio rodando na porta 3000'));
            " || echo "‚ùå Falha total"
          fi
        fi
    volumes:
      - ${APP_DATA_DIR}/data:/data
    environment:
      NODE_ENV: production
