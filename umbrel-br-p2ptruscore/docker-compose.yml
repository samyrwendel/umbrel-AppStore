version: '3'

services:
  app_proxy:
    environment:
      APP_HOST: app
      APP_PORT: 3000

  app:
    image: node:20-alpine
    restart: unless-stopped
    command: 
      - sh
      - -c
      - |
        echo "🚀 P2P TrustScore Bot v3.2.0 - PADRÃO UMBREL..."
        echo "📊 Variáveis de ambiente:"
        echo "   APP_HOST_PORT: ${APP_HOST_PORT}"
        echo "   NODE_ENV: ${NODE_ENV}"
        echo "🔍 Informações de rede:"
        hostname -i
        ip route show
        echo "🚀 Iniciando servidor HTTP..."
        node -e "
        const http = require('http');
        const os = require('os');
        
        console.log('🔧 DEBUG - Informações do sistema:');
        console.log('   Hostname:', os.hostname());
        console.log('   Platform:', os.platform());
        console.log('   Network interfaces:');
        const interfaces = os.networkInterfaces();
        Object.keys(interfaces).forEach(name => {
          interfaces[name].forEach(iface => {
            if (iface.family === 'IPv4') {
              console.log('     ' + name + ':', iface.address);
            }
          });
        });
        
        const server = http.createServer((req, res) => {
          console.log('📥 Request recebido:', req.method, req.url);
          res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
          res.end('<html><head><title>P2P TrustScore Bot</title><style>body{font-family:Arial,sans-serif;padding:40px;background:#f5f5f5;margin:0}.container{max-width:600px;margin:0 auto;background:white;padding:30px;border-radius:10px;box-shadow:0 2px 10px rgba(0,0,0,0.1)}h1{color:#333;text-align:center;margin-bottom:30px}.status{background:#e8f5e8;padding:20px;border-radius:8px;margin:20px 0;border-left:4px solid #4caf50}.instructions{background:#fff3cd;padding:20px;border-radius:8px;border-left:4px solid #ffc107}code{background:#f8f9fa;padding:4px 8px;border-radius:4px;font-family:monospace}.version{text-align:center;color:#666;margin-top:20px;font-size:14px}</style></head><body><div class=\"container\"><h1>🤖 P2P TrustScore Bot</h1><div class=\"status\"><h3>✅ Servidor funcionando!</h3><p>O bot está rodando corretamente na porta 3000.</p><p>Esta é uma versão de teste com logs de debug.</p></div><div class=\"instructions\"><h3>📋 Próximos passos:</h3><ol><li>Criar bot via @BotFather no Telegram</li><li>Configurar variáveis de ambiente via SSH</li><li>Reiniciar aplicação para usar o bot real</li></ol></div><div class=\"version\"><strong>Versão:</strong> 3.1.1 - Debug completo</div></div></body></html>');
        });
        
        server.listen(3000, '0.0.0.0', (err) => {
          if (err) {
            console.error('❌ ERRO ao iniciar servidor:', err);
            process.exit(1);
          }
          console.log('✅ Servidor HTTP ativo na porta 3000');
          console.log('🌐 Listening em 0.0.0.0:3000');
          console.log('📡 Servidor pronto para receber conexões');
          
          // Teste de conectividade interna
          setTimeout(() => {
            console.log('🧪 Testando conectividade interna...');
            const testReq = http.get('http://localhost:3000/', (res) => {
              console.log('✅ Teste interno OK - Status:', res.statusCode);
            }).on('error', (err) => {
              console.error('❌ Teste interno FALHOU:', err.message);
            });
          }, 2000);
        });
        
        process.on('SIGTERM', () => {
          console.log('🛑 Recebido SIGTERM, fechando servidor...');
          server.close(() => {
            console.log('👋 Servidor fechado graciosamente');
            process.exit(0);
          });
        });
        "
    volumes:
      - ${APP_DATA_DIR}/data:/data
    environment:
      NODE_ENV: production
