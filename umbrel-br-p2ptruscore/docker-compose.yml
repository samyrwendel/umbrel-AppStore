version: '3'

services:
  app_proxy:
    environment:
      APP_HOST: app
      APP_PORT: 3000

  app:
    image: node:20-alpine
    restart: unless-stopped
    command: 
      - sh
      - -c
      - |
        echo "üöÄ P2P TrustScore Bot v4.1.0 - FOR√áA ATUALIZA√á√ÉO..."
        apk add --no-cache git
        if [ ! -d /app/.git ]; then
          echo "üì• Clonando reposit√≥rio..."
          git clone https://github.com/samyrwendel/p2ptruscore.git /app
        else
          echo "üîÑ Atualizando c√≥digo..."
          cd /app && git pull origin main
        fi
        cd /app
        echo "üì¶ Instalando todas as depend√™ncias..."
        npm install
        echo "üèóÔ∏è Tentando compilar com npx (sem instala√ß√£o global)..."
        timeout 60 npx @nestjs/cli build || echo "‚ö†Ô∏è Build demorou muito ou falhou..."
        echo "üîç Verificando se build foi criado..."
        if [ -f "/app/dist/main.js" ]; then
          echo "‚úÖ Build criado com sucesso!"
          echo "üåê Iniciando servidor com interface de configura√ß√£o..."
          echo "‚úÖ Acesse /api/config para configurar o bot"
          npm run start:prod
        else
          echo "‚ùå Build falhou, iniciando servidor HTTP simples..."
          node -e "
          const http = require('http');
          const server = http.createServer((req, res) => {
            res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
            if (req.url === '/api/config') {
              res.end('<html><head><title>Configura√ß√£o Bot</title></head><body><h1>ü§ñ P2P TrustScore Bot</h1><p>‚ö†Ô∏è Interface de configura√ß√£o temporariamente indispon√≠vel</p><p>O bot est√° em modo de manuten√ß√£o devido a problemas de compila√ß√£o.</p></body></html>');
            } else {
              res.end('<html><head><title>P2P TrustScore Bot</title></head><body><h1>ü§ñ P2P TrustScore Bot</h1><p>‚úÖ Servidor funcionando!</p><p>‚ö†Ô∏è Bot em modo de manuten√ß√£o</p><p><a href=\"/api/config\">Ir para configura√ß√£o</a></p></body></html>');
            }
          });
          server.listen(3000, () => {
            console.log('‚úÖ Servidor HTTP simples rodando na porta 3000');
            console.log('üåê Acesse via bot√£o Abrir no Umbrel');
          });
          "
        fi
    volumes:
      - ${APP_DATA_DIR}/data:/data
    environment:
      NODE_ENV: production
